version: '3.5'
services:
  prometheus:
    image: ${USERNAME}/prometheus:2.16.0
    ports:
      - '9090:9090'
    volumes:
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention=1d'
    extra_hosts:
      - docker_host:172.17.0.1
    networks:
      - back_net
      - front_net
      - prom_net

  node-exporter:
    image: prom/node-exporter:v0.15.2
    user: root
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points="^/(sys|proc|dev|host|etc)($$|/)"'
    networks:
      - prom_net

  mongodb-exporter:
    image: ${USERNAME}/mongodb_exporter:0.10.0
    environment:
      - MONGODB_URI=mongodb://post_db:27017
    ports:
      - '9216:9216'
    networks:
      - prom_net
      - back_net

  blackbox-exporter:
    image: ${USERNAME}/blackbox_exporter:0.16.0
    ports:
      - '9115:9115'
    cap_add:
      - CAP_NET_RAW
    networks:
      - back_net
      - front_net
      - prom_net

  cadvisor:
    image: google/cadvisor:v0.29.0
    volumes:
      - '/:/rootfs:ro'
      - '/var/run:/var/run:ro'
      - '/sys:/sys:ro'
      - '/var/lib/docker:/var/lib/docker:ro'
    ports:
      - '8080:8080'
    networks:
      - prom_net

  grafana:
    image: ${USERNAME}/grafana
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=secret
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    networks:
      - prom_net

  alertmanager:
    image: ${USERNAME}/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
    ports:
      - 9093:9093
    networks:
      - prom_net

  telegraf:
    image: is217175/telegraf
    environment:
      - HOST_PROC=/host/proc
    volumes:
      - /proc:/host/proc:ro
      - /:/host/rootfs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - 9273:9273
    networks:
      - prom_net

  stackdriver:
    image: frodenas/stackdriver-exporter:master
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/data/google_sa.json
    command:
      - '--google.project-id=docker-123456'
      - '--monitoring.metrics-type-prefixes=compute.googleapis.com/firewall,compute.googleapis.com/instance'
      - '--monitoring.metrics-interval=5m'
    volumes:
      - stackdriver_data:/data
    ports:
      - 9255:9255
    networks:
      - prom_net

  trickster:
    image: tricksterio/trickster:1.0.1
    environment:
      - TRK_ORIGIN=http://prometheus:9090
      - TRK_ORIGIN_TYPE=prometheus
      - TRK_LOG_LEVEL=INFO
      - TRK_PROXY_PORT=9090
      - TRK_METRICS_PORT=8082
    ports:
      - 9091:9090
      - 8082:8082
    networks:
      - prom_net

volumes:
  grafana_data:
  prometheus_data:
  stackdriver_data:

networks:
  front_net:
    external:
      name: ${COMPOSE_PROJECT_NAME}_front_net

  back_net:
    external:
      name: ${COMPOSE_PROJECT_NAME}_back_net

  prom_net:
    ipam:
      config:
        - subnet: 10.0.3.0/24
