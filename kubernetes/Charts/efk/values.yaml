elasticsearch:
  replicaCount: 1

  image:
    repository: k8s.gcr.io/elasticsearch
    pullPolicy: IfNotPresent

  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    create: true
    annotations: {}
    name:

  transportPort: 9300

  service:
    type: ClusterIP
    port: 9200

  resources:
    limits:
      cpu: 1000m
    requests:
      cpu: 100m

  nodeSelector:
    elastichost: "true"

  pvSize: 2Gi

  environment:
  - name: MINIMUM_MASTER_NODES
    value: "1"
  - name: "NAMESPACE"
    valueFrom:
      fieldRef:
        fieldPath: metadata.namespace

fluentd:
  image:
    repository: gcr.io/google-containers/fluentd-elasticsearch

  nameOverride: ""
  fullnameOverride: ""

  resources:
    limits:
      memory: 500Mi
    requests:
      cpu: 100m
      memory: 200Mi

  nodeSelector:
    beta.kubernetes.io/fluentd-ds-ready: "true"

  volumeMounts:
  - name: varlog
    mountPath: /var/log
  - name: varlibdockercontainers
    mountPath: /var/lib/docker/containers
    readOnly: true
  - name: libsystemddir
    mountPath: /host/lib
    readOnly: true
  - name: config-volume
    mountPath: /etc/fluent/config.d

  volumes:
  - name: varlog
    hostPath:
      path: /var/log
  - name: varlibdockercontainers
    hostPath:
      path: /var/lib/docker/containers
  - name: libsystemddir
    hostPath:
      path: /usr/lib64

  environment:
  - name: FLUENTD_ARGS
    value: --no-supervisor -q

  configuration:
    containers.input.conf: |-
      <source>
        type tail
        path /var/log/containers/*.log
        pos_file /var/log/es-containers.log.pos
        time_format %Y-%m-%dT%H:%M:%S.%NZ
        tag kubernetes.*
        read_from_head true
        format multi_format
        <pattern>
          format json
          time_key time
          time_format %Y-%m-%dT%H:%M:%S.%NZ
        </pattern>
        <pattern>
          format /^(?<time>.+) (?<stream>stdout|stderr) [^ ]* (?<log>.*)$/
          time_format %Y-%m-%dT%H:%M:%S.%N%:z
        </pattern>
      </source>
    system.input.conf: |-
      <source>
        type tail
        format /^(?<time>[^ ]* [^ ,]*)[^\[]*\[[^\]]*\]\[(?<severity>[^ \]]*) *\] (?<message>.*)$/
        time_format %Y-%m-%d %H:%M:%S
        path /var/log/salt/minion
        pos_file /var/log/es-salt.pos
        tag salt
      </source>

      <source>
        type tail
        format syslog
        path /var/log/startupscript.log
        pos_file /var/log/es-startupscript.log.pos
        tag startupscript
      </source>

      <source>
        type tail
        format /^time="(?<time>[^)]*)" level=(?<severity>[^ ]*) msg="(?<message>[^"]*)"( err="(?<error>[^"]*)")?( statusCode=($<status_code>\d+))?/
        path /var/log/docker.log
        pos_file /var/log/es-docker.log.pos
        tag docker
      </source>

      <source>
        type tail
        # Not parsing this, because it doesn't have anything particularly useful to
        # parse out of it (like severities).
        format none
        path /var/log/etcd.log
        pos_file /var/log/es-etcd.log.pos
        tag etcd
      </source>

      <source>
        type tail
        format multiline
        multiline_flush_interval 5s
        format_firstline /^\w\d{4}/
        format1 /^(?<severity>\w)(?<time>\d{4} [^\s]*)\s+(?<pid>\d+)\s+(?<source>[^ \]]+)\] (?<message>.*)/
        time_format %m%d %H:%M:%S.%N
        path /var/log/kubelet.log
        pos_file /var/log/es-kubelet.log.pos
        tag kubelet
      </source>

      <source>
        type tail
        format multiline
        multiline_flush_interval 5s
        format_firstline /^\w\d{4}/
        format1 /^(?<severity>\w)(?<time>\d{4} [^\s]*)\s+(?<pid>\d+)\s+(?<source>[^ \]]+)\] (?<message>.*)/
        time_format %m%d %H:%M:%S.%N
        path /var/log/kube-proxy.log
        pos_file /var/log/es-kube-proxy.log.pos
        tag kube-proxy
      </source>

      <source>
        type tail
        format multiline
        multiline_flush_interval 5s
        format_firstline /^\w\d{4}/
        format1 /^(?<severity>\w)(?<time>\d{4} [^\s]*)\s+(?<pid>\d+)\s+(?<source>[^ \]]+)\] (?<message>.*)/
        time_format %m%d %H:%M:%S.%N
        path /var/log/kube-apiserver.log
        pos_file /var/log/es-kube-apiserver.log.pos
        tag kube-apiserver
      </source>

      <source>
        type tail
        format multiline
        multiline_flush_interval 5s
        format_firstline /^\w\d{4}/
        format1 /^(?<severity>\w)(?<time>\d{4} [^\s]*)\s+(?<pid>\d+)\s+(?<source>[^ \]]+)\] (?<message>.*)/
        time_format %m%d %H:%M:%S.%N
        path /var/log/kube-controller-manager.log
        pos_file /var/log/es-kube-controller-manager.log.pos
        tag kube-controller-manager
      </source>

      <source>
        type tail
        format multiline
        multiline_flush_interval 5s
        format_firstline /^\w\d{4}/
        format1 /^(?<severity>\w)(?<time>\d{4} [^\s]*)\s+(?<pid>\d+)\s+(?<source>[^ \]]+)\] (?<message>.*)/
        time_format %m%d %H:%M:%S.%N
        path /var/log/kube-scheduler.log
        pos_file /var/log/es-kube-scheduler.log.pos
        tag kube-scheduler
      </source>

      <source>
        type tail
        format multiline
        multiline_flush_interval 5s
        format_firstline /^\w\d{4}/
        format1 /^(?<severity>\w)(?<time>\d{4} [^\s]*)\s+(?<pid>\d+)\s+(?<source>[^ \]]+)\] (?<message>.*)/
        time_format %m%d %H:%M:%S.%N
        path /var/log/rescheduler.log
        pos_file /var/log/es-rescheduler.log.pos
        tag rescheduler
      </source>

      <source>
        type tail
        format multiline
        multiline_flush_interval 5s
        format_firstline /^\w\d{4}/
        format1 /^(?<severity>\w)(?<time>\d{4} [^\s]*)\s+(?<pid>\d+)\s+(?<source>[^ \]]+)\] (?<message>.*)/
        time_format %m%d %H:%M:%S.%N
        path /var/log/glbc.log
        pos_file /var/log/es-glbc.log.pos
        tag glbc
      </source>

      <source>
        type tail
        format multiline
        multiline_flush_interval 5s
        format_firstline /^\w\d{4}/
        format1 /^(?<severity>\w)(?<time>\d{4} [^\s]*)\s+(?<pid>\d+)\s+(?<source>[^ \]]+)\] (?<message>.*)/
        time_format %m%d %H:%M:%S.%N
        path /var/log/cluster-autoscaler.log
        pos_file /var/log/es-cluster-autoscaler.log.pos
        tag cluster-autoscaler
      </source>

      <source>
        type systemd
        filters [{ "_SYSTEMD_UNIT": "docker.service" }]
        pos_file /var/log/gcp-journald-docker.pos
        read_from_head true
        tag docker
      </source>

      <source>
        type systemd
        filters [{ "_SYSTEMD_UNIT": "kubelet.service" }]
        pos_file /var/log/gcp-journald-kubelet.pos
        read_from_head true
        tag kubelet
      </source>

      <source>
        type systemd
        filters [{ "_SYSTEMD_UNIT": "node-problem-detector.service" }]
        pos_file /var/log/gcp-journald-node-problem-detector.pos
        read_from_head true
        tag node-problem-detector
      </source>
    forward.input.conf: |-
      <source>
        type forward
      </source>
    monitoring.conf: |-
      <source>
        @type prometheus
      </source>

      <source>
        @type monitor_agent
      </source>

      <source>
        @type prometheus_monitor
        <labels>
          host ${hostname}
        </labels>
      </source>

      <source>
        @type prometheus_output_monitor
        <labels>
          host ${hostname}
        </labels>
      </source>

      <source>
        @type prometheus_tail_monitor
        <labels>
          host ${hostname}
        </labels>
      </source>
    output.conf: |-
      <filter kubernetes.**>
        type kubernetes_metadata
      </filter>

      <match **>
          type elasticsearch
          log_level info
          include_tag_key true
          host efk-elasticsearch
          port 9200
          logstash_format true
          logstash_prefix fluentd
          # Set the chunk limits.
          buffer_chunk_limit 2M
          buffer_queue_limit 8
          flush_interval 5s
          # Never wait longer than 5 minutes between retries.
          max_retry_wait 30
          # Disable the limit on the number of retries (retry forever).
          disable_retry_limit
          # Use multiple threads for processing.
          num_threads 2
      </match>

kibana:
  ingress:
    enabled: true
    hosts:
      - reddit-kibana

  env:
    ELASTICSEARCH_URL: http://efk-elasticsearch:9200
